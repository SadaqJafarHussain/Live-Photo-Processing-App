import type { FaceCameraProps, FaceComponentData } from './faceTypes';
import type { OnCompleteData } from './liveness';
import type { CustomElement } from '../../../ui-common/src/types';
export * from './liveness';
declare global {
    interface Window {
        DOT_DEBUG_MODE?: boolean;
    }
    namespace JSX {
        interface IntrinsicElements {
            'x-dot-magnifeye-liveness': CustomElement<{
                props: MagnifEyeLivenessProps;
            }>;
        }
    }
}
export type MagnifEyeLivenessProps = Pick<FaceCameraProps, 'assetsDirectoryPath' | 'onError' | 'sessionToken' | 'styleTarget'> & {
    onComplete: MagnifEyeLivenessCallback;
};
export type HTMLMagnifEyeLivenessElement = HTMLElement & {
    props: MagnifEyeLivenessProps;
};
export type HTMLMagnifEyeFaceCaptureElement = HTMLElement & {
    cameraOptions: FaceCameraProps;
};
export type MiddlePhotoCandidate = {
    data: FaceComponentData;
    image: HTMLCanvasElement;
};
export type MagnifEyeLivenessCallback = (imageData: OnCompleteData, content: Uint8Array) => void;
